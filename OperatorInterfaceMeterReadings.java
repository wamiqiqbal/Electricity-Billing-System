/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package electricitybillingsystem;

import java.awt.Color;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.MatteBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Noem Ahmed Khan
 */
public class OperatorInterfaceMeterReadings extends javax.swing.JFrame {

    // Creating Default Table Model To Insert & Delete Data
    DefaultTableModel model;
    
    public OperatorInterfaceMeterReadings() {
        initComponents();
        
         // To Center the table header text
        ((DefaultTableCellRenderer) OperatorInterfaceMeterReadings.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(javax.swing.JLabel.CENTER);
        
        // Default Table Model Initialization
        model = (DefaultTableModel) OperatorInterfaceMeterReadings.getModel();
        
        // Set column auto resizable
        OperatorInterfaceMeterReadings.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        
         // JDBC Connection
        
         // URL, USERNAME, PASSWORD
        String url = "jdbc:mysql://localhost:3306/electricitybillingsystem";
        String username = "root";
        String password = "noemak";
    
        // Establishing Connection
        try {
            Connection con = DriverManager.getConnection(url, username, password);
            System.out.println("Connection Established Successfully!");
            String query = "SELECT * FROM meter_readings;";
            PreparedStatement prepStm = con.prepareStatement(query);
            ResultSet res = prepStm.executeQuery();
           
            while(res.next()){
                String id = res.getString("meter_reading_ID");
                String meterNo = res.getString("meter_number");
                String consumedUnits = res.getString("consumed_units");
                String month = res.getString("month");
                String year = res.getString("year");
                String rateTier = res.getString("rate_tier");
                
                String data[] = {id, meterNo, consumedUnits, month, year, rateTier};
                model.addRow(data);
            }
            
            res.close();
            prepStm.close();
            con.close();
            
            } catch (SQLException excp) {
                System.out.println(excp.getMessage());
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Sep1 = new javax.swing.JPanel();
        lblEcoPulseLimited = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        MeterReadingsScrollPanel = new javax.swing.JScrollPane();
        OperatorInterfaceMeterReadings = new javax.swing.JTable();
        lblID = new javax.swing.JLabel();
        lblConsumedUnits = new javax.swing.JLabel();
        lblMeterNo = new javax.swing.JLabel();
        txtConsumedUnits = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        txtMeterNo = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        Sep2 = new javax.swing.JSeparator();
        Sep3 = new javax.swing.JSeparator();
        lblMonth = new javax.swing.JLabel();
        lblRateTier = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        txtRateTier = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtMonth = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Meter Readings");

        Sep1.setBackground(new java.awt.Color(0, 153, 153));

        lblEcoPulseLimited.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblEcoPulseLimited.setForeground(new java.awt.Color(102, 102, 102));
        lblEcoPulseLimited.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEcoPulseLimited.setText("EcoPulse Private Limited");

        btnAdd.setBackground(new java.awt.Color(102, 102, 102));
        btnAdd.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 255, 255)));
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddMouseExited(evt);
            }
        });
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(102, 102, 102));
        btnDelete.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 255, 255)));
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeleteMouseExited(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        OperatorInterfaceMeterReadings.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        OperatorInterfaceMeterReadings.setForeground(new java.awt.Color(102, 102, 102));
        OperatorInterfaceMeterReadings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Meter No", "Consumed Units", "Month", "Year", "Rate Tier"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OperatorInterfaceMeterReadings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OperatorInterfaceMeterReadings.setFocusable(false);
        OperatorInterfaceMeterReadings.setGridColor(new java.awt.Color(204, 204, 204));
        OperatorInterfaceMeterReadings.setName("Meter Readings"); // NOI18N
        OperatorInterfaceMeterReadings.setRowHeight(30);
        OperatorInterfaceMeterReadings.setSelectionBackground(new java.awt.Color(102, 102, 102));
        OperatorInterfaceMeterReadings.setSelectionForeground(new java.awt.Color(255, 255, 255));
        OperatorInterfaceMeterReadings.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        OperatorInterfaceMeterReadings.getTableHeader().setReorderingAllowed(false);
        MeterReadingsScrollPanel.setViewportView(OperatorInterfaceMeterReadings);

        lblID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblID.setForeground(new java.awt.Color(102, 102, 102));
        lblID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblID.setText("ID");

        lblConsumedUnits.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblConsumedUnits.setForeground(new java.awt.Color(102, 102, 102));
        lblConsumedUnits.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblConsumedUnits.setText("Consumed Units");

        lblMeterNo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblMeterNo.setForeground(new java.awt.Color(102, 102, 102));
        lblMeterNo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMeterNo.setText("Meter No");

        txtConsumedUnits.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtConsumedUnits.setForeground(new java.awt.Color(102, 102, 102));
        txtConsumedUnits.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 102, 102)));

        txtID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtID.setForeground(new java.awt.Color(102, 102, 102));
        txtID.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 102, 102)));

        txtMeterNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtMeterNo.setForeground(new java.awt.Color(102, 102, 102));
        txtMeterNo.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 102, 102)));

        lblMonth.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblMonth.setForeground(new java.awt.Color(102, 102, 102));
        lblMonth.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMonth.setText("Month");

        lblRateTier.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblRateTier.setForeground(new java.awt.Color(102, 102, 102));
        lblRateTier.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblRateTier.setText("Rate Tier");

        lblYear.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblYear.setForeground(new java.awt.Color(102, 102, 102));
        lblYear.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblYear.setText("Year");

        txtRateTier.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtRateTier.setForeground(new java.awt.Color(102, 102, 102));
        txtRateTier.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 102, 102)));

        txtYear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtYear.setForeground(new java.awt.Color(102, 102, 102));
        txtYear.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 102, 102)));

        txtMonth.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtMonth.setForeground(new java.awt.Color(102, 102, 102));
        txtMonth.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 102, 102)));

        javax.swing.GroupLayout Sep1Layout = new javax.swing.GroupLayout(Sep1);
        Sep1.setLayout(Sep1Layout);
        Sep1Layout.setHorizontalGroup(
            Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(Sep2)
            .addGroup(Sep1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Sep1Layout.createSequentialGroup()
                        .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MeterReadingsScrollPanel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Sep3))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Sep1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(Sep1Layout.createSequentialGroup()
                        .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Sep1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblMeterNo, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMeterNo, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(59, 59, 59)
                                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(Sep1Layout.createSequentialGroup()
                                        .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtConsumedUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblConsumedUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(60, 60, 60)
                                        .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(Sep1Layout.createSequentialGroup()
                                        .addComponent(lblRateTier, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblYear, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Sep1Layout.createSequentialGroup()
                                        .addComponent(txtRateTier, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(lblEcoPulseLimited, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Sep1Layout.setVerticalGroup(
            Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Sep1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblEcoPulseLimited, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(MeterReadingsScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(Sep2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblConsumedUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConsumedUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMeterNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRateTier, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblYear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMeterNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRateTier, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(Sep3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Sep1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Sep1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseEntered
        // TODO add your handling code here:
        btnAdd.setBackground(new Color(255, 255, 255));
        btnAdd.setForeground(new Color(102, 102, 102));
        btnAdd.setBorder(new MatteBorder(4, 4, 4, 4, new Color(102, 102, 102)));
        btnAdd.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btnAddMouseEntered

    private void btnAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseExited
        // TODO add your handling code here:
        btnAdd.setBackground(new Color(102, 102, 102));
        btnAdd.setForeground(new Color(255, 255, 255));
        btnAdd.setBorder(new MatteBorder(4, 4, 4, 4, new Color(255, 255, 255)));
        btnAdd.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnAddMouseExited

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String ID, meterNo, consumedUnits, month, year, rateTier;
        ID = txtID.getText();
        meterNo = txtMeterNo.getText();
        consumedUnits = txtConsumedUnits.getText();
        month = txtMonth.getText();
        year = txtYear.getText();
        rateTier = txtRateTier.getText();
        String[] data = {ID, meterNo, consumedUnits, month, year, rateTier};

        // Adding values into the table
        model.addRow(data);

        // Setting fields empty
        txtID.setText("");
        txtMeterNo.setText("");
        txtConsumedUnits.setText("");
        txtMonth.setText("");
        txtYear.setText("");
        txtRateTier.setText("");
        
        // Adding values to the database
        // JDBC Connection
        
        // URL, USERNAME, PASSWORD
        String url = "jdbc:mysql://localhost:3306/electricitybillingsystem";
        String username = "root";
        String password = "noemak";
    
        // Establishing Connection
        try {
            Connection con = DriverManager.getConnection(url, username, password);
            System.out.println("Connection Established Successfully!");
            String query = "INSERT INTO meter_readings(meter_reading_ID, meter_number, consumed_units, month, year, rate_tier) VALUES (?, ?, ?, ?, ?, ?);";
            PreparedStatement prepStm = con.prepareStatement(query);
            prepStm.setString(1, ID);
            prepStm.setString(2, meterNo);
            prepStm.setString(3, consumedUnits);
            prepStm.setString(4, month);
            prepStm.setString(5, year);
            prepStm.setString(6, rateTier);
            prepStm.executeUpdate();
           
            prepStm.close();
            con.close();
            
        } catch (SQLException excp) {
            System.out.println(excp.getMessage());
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseEntered
        // TODO add your handling code here:
        btnDelete.setBackground(new Color(255, 255, 255));
        btnDelete.setForeground(new Color(102, 102, 102));
        btnDelete.setBorder(new MatteBorder(4, 4, 4, 4, new Color(102, 102, 102)));
        btnDelete.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btnDeleteMouseEntered

    private void btnDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseExited
        // TODO add your handling code here:
        btnDelete.setBackground(new Color(102, 102, 102));
        btnDelete.setForeground(new Color(255, 255, 255));
        btnDelete.setBorder(new MatteBorder(4, 4, 4, 4, new Color(255, 255, 255)));
        btnDelete.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnDeleteMouseExited

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = OperatorInterfaceMeterReadings.getSelectedRow();

        if (selectedRow != -1) {
             // Deleting row from the database
             // JDBC Connection
        
             // URL, USERNAME, PASSWORD
             String url = "jdbc:mysql://localhost:3306/electricitybillingsystem";
             String username = "root";
             String password = "noemak";
    
             // Establishing Connection
            try {
                  Connection con = DriverManager.getConnection(url, username, password);
                  System.out.println("Connection Established Successfully!");
                  String ID = OperatorInterfaceMeterReadings.getValueAt(selectedRow, 0).toString();
                  String query = "DELETE FROM meter_readings WHERE meter_reading_ID = " + ID + ";";
                  PreparedStatement prepStm = con.prepareStatement(query);
                  int rowsAffected = prepStm.executeUpdate();
           
                  prepStm.close();
                  con.close();
            
                } catch (SQLException excp) {
                    System.out.println(excp.getMessage());
                }            
            
            // Remove selected row
            model.removeRow(selectedRow);
        } else {
            // Show message if no row is selected
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OperatorInterfaceMeterReadings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OperatorInterfaceMeterReadings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OperatorInterfaceMeterReadings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OperatorInterfaceMeterReadings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() { }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane MeterReadingsScrollPanel;
    private javax.swing.JTable OperatorInterfaceMeterReadings;
    private javax.swing.JPanel Sep1;
    private javax.swing.JSeparator Sep2;
    private javax.swing.JSeparator Sep3;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblConsumedUnits;
    private javax.swing.JLabel lblEcoPulseLimited;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblMeterNo;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JLabel lblRateTier;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTextField txtConsumedUnits;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMeterNo;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtRateTier;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
