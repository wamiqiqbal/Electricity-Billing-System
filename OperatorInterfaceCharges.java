/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package electricitybillingsystem;

import java.awt.Color;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.MatteBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Noem Ahmed Khan
 */
public class OperatorInterfaceCharges extends javax.swing.JFrame {

    // Creating Default Table Model To Insert & Delete Data
    DefaultTableModel model;
    
    public OperatorInterfaceCharges() {
        initComponents();
        
        // To Center the table header text
        ((DefaultTableCellRenderer) OperatorInterfaceCharges.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(javax.swing.JLabel.CENTER);
        
        // Default Table Model Initialization
        model = (DefaultTableModel) OperatorInterfaceCharges.getModel();
        
        // Set column auto resizable
        OperatorInterfaceCharges.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        
         // JDBC Connection
        
         // URL, USERNAME, PASSWORD
        String url = "jdbc:mysql://localhost:3306/electricitybillingsystem";
        String username = "root";
        String password = "noemak";
    
        // Establishing Connection
        try {
            Connection con = DriverManager.getConnection(url, username, password);
            System.out.println("Connection Established Successfully!");
            String query = "SELECT * FROM charges;";
            PreparedStatement prepStm = con.prepareStatement(query);
            ResultSet res = prepStm.executeQuery();
           
            while(res.next()){
                String charge_id = res.getString("charge_ID");
                String bill_id = res.getString("bill_ID");
                String meter_rent = res.getString("meter_rent");
                String service_charges = res.getString("service_charges");
                String tv_license_fee = res.getString("tv_license_fee");
                String fuel_adjustment_charges = res.getString("fuel_adjustment_charges");
                String gst = res.getString("gst");
                String total_charges = res.getString("total_charges");
                
                String data[] = {charge_id, bill_id, meter_rent, service_charges, tv_license_fee, fuel_adjustment_charges, gst, total_charges};
                model.addRow(data);
            }
            
            prepStm.close();
            con.close();
            
            } catch (SQLException excp) {
                System.out.println(excp.getMessage());
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Sep1 = new javax.swing.JPanel();
        lblEcoPulseLimited = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        ChargesScrollPanel = new javax.swing.JScrollPane();
        OperatorInterfaceCharges = new javax.swing.JTable();
        lblBillID = new javax.swing.JLabel();
        txtBillID = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        Sep2 = new javax.swing.JSeparator();
        Sep3 = new javax.swing.JSeparator();
        lblChargesID = new javax.swing.JLabel();
        txtChargesID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Charges");

        Sep1.setBackground(new java.awt.Color(0, 153, 153));

        lblEcoPulseLimited.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblEcoPulseLimited.setForeground(new java.awt.Color(102, 102, 102));
        lblEcoPulseLimited.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEcoPulseLimited.setText("EcoPulse Private Limited");

        btnAdd.setBackground(new java.awt.Color(102, 102, 102));
        btnAdd.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 255, 255)));
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddMouseExited(evt);
            }
        });
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        OperatorInterfaceCharges.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        OperatorInterfaceCharges.setForeground(new java.awt.Color(102, 102, 102));
        OperatorInterfaceCharges.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Charges ID", "Bill ID", "Meter Rent 1%", "Service Charges 1%", "TV License Fee 2%", "Fuel Adjustment Charges 4%", "GST 5%", "Total Charges"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OperatorInterfaceCharges.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OperatorInterfaceCharges.setFocusable(false);
        OperatorInterfaceCharges.setGridColor(new java.awt.Color(204, 204, 204));
        OperatorInterfaceCharges.setName("Charges"); // NOI18N
        OperatorInterfaceCharges.setRowHeight(30);
        OperatorInterfaceCharges.setSelectionBackground(new java.awt.Color(102, 102, 102));
        OperatorInterfaceCharges.setSelectionForeground(new java.awt.Color(255, 255, 255));
        OperatorInterfaceCharges.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        OperatorInterfaceCharges.getTableHeader().setReorderingAllowed(false);
        ChargesScrollPanel.setViewportView(OperatorInterfaceCharges);

        lblBillID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblBillID.setForeground(new java.awt.Color(102, 102, 102));
        lblBillID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBillID.setText("Bill ID");

        txtBillID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtBillID.setForeground(new java.awt.Color(102, 102, 102));
        txtBillID.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 102, 102)));

        lblChargesID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblChargesID.setForeground(new java.awt.Color(102, 102, 102));
        lblChargesID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblChargesID.setText("Charges ID");

        txtChargesID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtChargesID.setForeground(new java.awt.Color(102, 102, 102));
        txtChargesID.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 102, 102)));

        javax.swing.GroupLayout Sep1Layout = new javax.swing.GroupLayout(Sep1);
        Sep1.setLayout(Sep1Layout);
        Sep1Layout.setHorizontalGroup(
            Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(Sep2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Sep1Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtChargesID)
                    .addComponent(lblChargesID, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblBillID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtBillID, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE))
                .addGap(108, 108, 108))
            .addGroup(Sep1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Sep3)
                    .addGroup(Sep1Layout.createSequentialGroup()
                        .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEcoPulseLimited, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ChargesScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Sep1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        Sep1Layout.setVerticalGroup(
            Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Sep1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblEcoPulseLimited, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ChargesScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(Sep2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBillID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChargesID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Sep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBillID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChargesID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Sep3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Sep1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Sep1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseEntered
        // TODO add your handling code here:
        btnAdd.setBackground(new Color(255, 255, 255));
        btnAdd.setForeground(new Color(102, 102, 102));
        btnAdd.setBorder(new MatteBorder(4, 4, 4, 4, new Color(102, 102, 102)));
        btnAdd.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btnAddMouseEntered

    private void btnAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseExited
        // TODO add your handling code here:
        btnAdd.setBackground(new Color(102, 102, 102));
        btnAdd.setForeground(new Color(255, 255, 255));
        btnAdd.setBorder(new MatteBorder(4, 4, 4, 4, new Color(255, 255, 255)));
        btnAdd.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnAddMouseExited

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String chargeID, billID, totCharges;
        double  meterRent, servCharges, tvLicenseFee, fuelAdjCharges, gst;
        meterRent = servCharges = tvLicenseFee = fuelAdjCharges = gst = 0.0;
        totCharges = "";
        chargeID = txtChargesID.getText();
        billID = txtBillID.getText(); 

        // Adding values to the database
        // JDBC Connection
        
        // URL, USERNAME, PASSWORD
        String url = "jdbc:mysql://localhost:3306/electricitybillingsystem";
        String username = "root";
        String password = "noemak";
    
        // Establishing Connection
        try {
            Connection con = DriverManager.getConnection(url, username, password);
            System.out.println("Connection Established Successfully!");
            String query = "SELECT amount FROM bills WHERE bill_ID = " + billID + ";";
            PreparedStatement prepStm = con.prepareStatement(query);
            ResultSet res = prepStm.executeQuery();
            double amount = 0.0;
            
            while(res.next())
                amount = Double.parseDouble(res.getString("amount"));
            
            meterRent = (amount / 100) * 1;
            servCharges = (amount / 100) * 1;
            tvLicenseFee = (amount / 100) * 2;
            fuelAdjCharges = (amount / 100) * 4;
            gst = (amount / 100) * 5;
            totCharges = String.valueOf( meterRent + servCharges + tvLicenseFee + fuelAdjCharges + gst );

            // Insert values to the charges table in the database
            String query2 = "INSERT INTO charges(charge_ID, bill_ID, meter_rent, service_charges, tv_license_fee, fuel_adjustment_charges, gst, total_charges) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement prepStm2 = con.prepareStatement(query2);
            prepStm2.setString(1, chargeID);
            prepStm2.setString(2, billID);
            prepStm2.setString(3, String.valueOf(meterRent));
            prepStm2.setString(4, String.valueOf(servCharges));
            prepStm2.setString(5, String.valueOf(tvLicenseFee));
            prepStm2.setString(6, String.valueOf(fuelAdjCharges));
            prepStm2.setString(7, String.valueOf(gst));
            prepStm2.setString(8, totCharges);
            prepStm2.executeUpdate();
            
            
            // Insert values to the payment status table in the database
            String query3 = "INSERT INTO payment_status(bill_ID, charge_ID, amount, payment_status) VALUES (?, ?, ?, ?)";
            PreparedStatement prepStm3 = con.prepareStatement(query3);
            String totAmount = String.valueOf( amount + meterRent + servCharges + tvLicenseFee + fuelAdjCharges + gst );
            prepStm3.setString(1, billID);
            prepStm3.setString(2, chargeID);
            prepStm3.setString(3, totAmount);
            prepStm3.setString(4, "Unpaid");
            prepStm3.executeUpdate();
            
            res.close();
            prepStm.close();
            con.close();
            
        } catch (SQLException excp) {
            System.out.println(excp.getMessage());
        }
        
        
        String[] data = {chargeID, billID, String.valueOf(meterRent), String.valueOf(servCharges), String.valueOf(tvLicenseFee), String.valueOf(fuelAdjCharges), String.valueOf(gst), totCharges};

        // Adding values into the table
        model.addRow(data);

        // Setting fields empty
        txtChargesID.setText("");
        txtBillID.setText("");
    }//GEN-LAST:event_btnAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OperatorInterfaceCharges.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OperatorInterfaceCharges.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OperatorInterfaceCharges.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OperatorInterfaceCharges.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() { }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ChargesScrollPanel;
    private javax.swing.JTable OperatorInterfaceCharges;
    private javax.swing.JPanel Sep1;
    private javax.swing.JSeparator Sep2;
    private javax.swing.JSeparator Sep3;
    private javax.swing.JButton btnAdd;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblBillID;
    private javax.swing.JLabel lblChargesID;
    private javax.swing.JLabel lblEcoPulseLimited;
    private javax.swing.JTextField txtBillID;
    private javax.swing.JTextField txtChargesID;
    // End of variables declaration//GEN-END:variables
}
