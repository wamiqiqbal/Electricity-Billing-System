/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package electricitybillingsystem;

import java.awt.Color;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.border.MatteBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Noem Ahmed Khan
 */
public class CustomerInterfaceBills extends javax.swing.JFrame {

    // Creating Default Table Model To Insert & Delete Data
    DefaultTableModel model;
    
    String account_number = "";
    
    public CustomerInterfaceBills(String accNo) {
        initComponents();
        
        account_number = accNo;

         // To Center the table header text
        ((DefaultTableCellRenderer) CustomerInterfaceBills.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(javax.swing.JLabel.CENTER);
        
        // Default Table Model Initialization
        model = (DefaultTableModel) CustomerInterfaceBills.getModel();

        // Set column auto resizable
        CustomerInterfaceBills.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Sep3 = new javax.swing.JPanel();
        lblEcoPulseLimited2 = new javax.swing.JLabel();
        BillsScrollPanel = new javax.swing.JScrollPane();
        CustomerInterfaceBills = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        Sep4 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        btnSearchAll = new javax.swing.JButton();
        txtBillID = new javax.swing.JTextField();
        lblBillID = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Bills");

        Sep3.setBackground(new java.awt.Color(0, 153, 153));

        lblEcoPulseLimited2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblEcoPulseLimited2.setForeground(new java.awt.Color(102, 102, 102));
        lblEcoPulseLimited2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEcoPulseLimited2.setText("EcoPulse Private Limited");

        CustomerInterfaceBills.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CustomerInterfaceBills.setForeground(new java.awt.Color(102, 102, 102));
        CustomerInterfaceBills.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill ID", "Meter Reading ID", "Issue Date", "Due Date", "Month", "Year", "Charges", "Amount", "Total Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CustomerInterfaceBills.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CustomerInterfaceBills.setFocusable(false);
        CustomerInterfaceBills.setGridColor(new java.awt.Color(204, 204, 204));
        CustomerInterfaceBills.setName("Bills"); // NOI18N
        CustomerInterfaceBills.setRowHeight(30);
        CustomerInterfaceBills.setSelectionBackground(new java.awt.Color(102, 102, 102));
        CustomerInterfaceBills.setSelectionForeground(new java.awt.Color(255, 255, 255));
        CustomerInterfaceBills.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CustomerInterfaceBills.getTableHeader().setReorderingAllowed(false);
        BillsScrollPanel.setViewportView(CustomerInterfaceBills);

        btnSearchAll.setBackground(new java.awt.Color(102, 102, 102));
        btnSearchAll.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        btnSearchAll.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchAll.setText("Search All");
        btnSearchAll.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 255, 255)));
        btnSearchAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSearchAllMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSearchAllMouseExited(evt);
            }
        });
        btnSearchAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAllActionPerformed(evt);
            }
        });

        txtBillID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtBillID.setForeground(new java.awt.Color(102, 102, 102));
        txtBillID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBillIDActionPerformed(evt);
            }
        });

        lblBillID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblBillID.setForeground(new java.awt.Color(102, 102, 102));
        lblBillID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBillID.setText("Bill ID");

        btnSearch.setBackground(new java.awt.Color(102, 102, 102));
        btnSearch.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 255, 255)));
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSearchMouseExited(evt);
            }
        });
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Sep3Layout = new javax.swing.GroupLayout(Sep3);
        Sep3.setLayout(Sep3Layout);
        Sep3Layout.setHorizontalGroup(
            Sep3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Sep3Layout.createSequentialGroup()
                .addGap(794, 794, 794)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE))
            .addComponent(Sep4)
            .addGroup(Sep3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(Sep3Layout.createSequentialGroup()
                .addGroup(Sep3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Sep3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblEcoPulseLimited2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Sep3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BillsScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(Sep3Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(Sep3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblBillID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtBillID, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSearchAll, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        Sep3Layout.setVerticalGroup(
            Sep3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Sep3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblEcoPulseLimited2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BillsScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Sep4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(lblBillID, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Sep3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearchAll, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Sep3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBillID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Sep3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Sep3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchAllMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchAllMouseEntered
        // TODO add your handling code here:
        btnSearchAll.setBackground(new Color(255, 255, 255));
        btnSearchAll.setForeground(new Color(102, 102, 102));
        btnSearchAll.setBorder(new MatteBorder(4, 4, 4, 4, new Color(102, 102, 102)));
        btnSearchAll.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btnSearchAllMouseEntered

    private void btnSearchAllMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchAllMouseExited
        // TODO add your handling code here:
        btnSearchAll.setBackground(new Color(102, 102, 102));
        btnSearchAll.setForeground(new Color(255, 255, 255));
        btnSearchAll.setBorder(new MatteBorder(4, 4, 4, 4, new Color(255, 255, 255)));
        btnSearchAll.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnSearchAllMouseExited

    private void btnSearchAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAllActionPerformed
        // TODO add your handling code here:

        // Erasing all data from the table
        model.setRowCount(0);
        
         // JDBC Connection
        
         // URL, USERNAME, PASSWORD
        String url = "jdbc:mysql://localhost:3306/electricitybillingsystem";
        String username = "root";
        String password = "noemak";
    
        // Establishing Connection
        try {
            Connection con = DriverManager.getConnection(url, username, password);
            System.out.println("Connection Established Successfully!");
            String query = "SELECT * FROM bills WHERE account_number = " + account_number + ";";
            PreparedStatement prepStm = con.prepareStatement(query);
            ResultSet res = prepStm.executeQuery();
            
            while(res.next()){
                
                String bill_ID = res.getString("bill_ID");
                String meter_reading_ID = res.getString("meter_reading_ID");
                String issue_date = res.getString("issue_date");
                String due_date = res.getString("due_date");
                String month = res.getString("month");
                String year = res.getString("year");
                String amount = res.getString("amount");
                
            String query2 = "SELECT total_charges FROM charges WHERE bill_ID = " + bill_ID + ";";
            PreparedStatement prepStm2 = con.prepareStatement(query2);
            ResultSet res2 = prepStm2.executeQuery();
                
                String charges = "";
                
                while(res2.next())
                    charges = res2.getString("total_charges");
                
                String total_amount = String.valueOf( Double.parseDouble(charges) + Double.parseDouble(amount) );
                String data[] = {bill_ID, meter_reading_ID, issue_date, due_date, month, year, charges, amount, total_amount};
                model.addRow(data);
                
                res2.close();
                prepStm2.close();
            }
            
            res.close();
            prepStm.close();
            con.close();
            
            } catch (SQLException excp) {
                System.out.println(excp.getMessage());
            }
    }//GEN-LAST:event_btnSearchAllActionPerformed

    private void txtBillIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBillIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBillIDActionPerformed

    private void btnSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseEntered
        // TODO add your handling code here:
        btnSearch.setBackground(new Color(255, 255, 255));
        btnSearch.setForeground(new Color(102, 102, 102));
        btnSearch.setBorder(new MatteBorder(4, 4, 4, 4, new Color(102, 102, 102)));
        btnSearch.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btnSearchMouseEntered

    private void btnSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseExited
        // TODO add your handling code here:
        btnSearch.setBackground(new Color(102, 102, 102));
        btnSearch.setForeground(new Color(255, 255, 255));
        btnSearch.setBorder(new MatteBorder(4, 4, 4, 4, new Color(255, 255, 255)));
        btnSearch.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnSearchMouseExited

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        
        // Erasing all data from the table
        model.setRowCount(0);
        
         // JDBC Connection
        
         // URL, USERNAME, PASSWORD
        String url = "jdbc:mysql://localhost:3306/electricitybillingsystem";
        String username = "root";
        String password = "noemak";
    
        // Establishing Connection
        try {
            Connection con = DriverManager.getConnection(url, username, password);
            System.out.println("Connection Established Successfully!");
            String query = "SELECT * FROM bills WHERE bill_ID = " + txtBillID.getText() + ";";
            PreparedStatement prepStm = con.prepareStatement(query);
            ResultSet res = prepStm.executeQuery();
            
            String query2 = "SELECT total_charges FROM charges WHERE bill_ID = " + txtBillID.getText() + ";";
            PreparedStatement prepStm2 = con.prepareStatement(query2);
            ResultSet res2 = prepStm2.executeQuery();
            
            while(res.next()){
                String charges = "";
                while(res2.next())
                    charges = res2.getString("total_charges");
                
                    String bill_ID = res.getString("bill_ID");
                    String meter_reading_ID = res.getString("meter_reading_ID");
                    String issue_date = res.getString("issue_date");
                    String due_date = res.getString("due_date");
                    String month = res.getString("month");
                    String year = res.getString("year");
                    String amount = res.getString("amount");
                
                    
                    String total_amount = String.valueOf( Double.parseDouble(charges) + Double.parseDouble(amount) );
                    String data[] = {bill_ID, meter_reading_ID, issue_date, due_date, month, year, charges, amount, total_amount};
                    model.addRow(data);
            }
            
            res.close();
            res2.close();
            prepStm.close();
            prepStm2.close();
            con.close();
            
            } catch (SQLException excp) {
                System.out.println(excp.getMessage());
            }
        
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerInterfaceBills.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerInterfaceBills.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerInterfaceBills.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerInterfaceBills.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() { }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane BillsScrollPanel;
    private javax.swing.JTable CustomerInterfaceBills;
    private javax.swing.JPanel Sep3;
    private javax.swing.JSeparator Sep4;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchAll;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblBillID;
    private javax.swing.JLabel lblEcoPulseLimited2;
    private javax.swing.JTextField txtBillID;
    // End of variables declaration//GEN-END:variables
}
